name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run ruff format check
        run: uv run ruff format --check src tests

      - name: Run ruff lint
        run: uv run ruff check src tests

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run tests with coverage
        run: uv run pytest --cov=ia_writer_templates --cov-report=xml --cov-report=term tests/

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build Templates
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync

      - name: Build templates
        run: uv run python -m ia_writer_templates.main

      - name: Verify build output
        run: |
          echo "Checking built templates..."
          ls -la dist/templates/

          # Verify expected templates exist
          if [ ! -d "dist/templates/GitHub.iatemplate" ]; then
            echo "Error: GitHub template not found"
            exit 1
          fi

          if [ ! -d "dist/templates/Neon-Flux.iatemplate" ]; then
            echo "Error: Neon Flux template not found"
            exit 1
          fi

          echo "âœ… All templates built successfully"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: templates-${{ github.sha }}
          path: dist/templates/
          retention-days: 7

  build-package:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install 3.13

      - name: Build package
        run: uv build

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7